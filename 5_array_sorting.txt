Question #5: Array Sorting

Write an algorithm that sorts an array without using the sort() method. 
There are many different sorting algorithms 
- take the time to read about the following:

Quick sort
Merge sort
Heap sort
Insertion sort
Bubble sort
Selection sort

You may implement any of the above algorithms (or your own) to solve the problem
 - as long as it doesn't use sort().

 Questions:
 - Can I expect the elements to always be integers?
 - I will be sorting the elements from lowest to highest?

Example
Input: [9, 2, 7, 12]

Output: [2, 7, 9, 12]

- Bubble Sort:

function bubbleSort(array) {      
  for(let i = 0; i < array.length; i++) {  
    for(let j = 0; j < array.length; j++) { 
      if(array[j] > array[j + 1]) {   
        let temp = array[j];
        array[j] = array[j + 1];
        array[j + 1] = temp;
      }
    }
  }
  return array;
}

console.log(bubbleSort(count2)); output = [2, 7, 9, 2]

- Selection Sort:

function selectionSort(array) {  // create function 'selectionSort', passing 'array' as the argument.
  let newArray = array.length;
  for (let i = 0; i < newArray; i++) {  // create a for loop to find the smallest number in the subarray
    let minIndex = i;
    for (let j = i + 1; j < newArray; j++) { 
      if(array[j] < array[minIndex]) {
        minIndex = j;
      }
    }
    if (minIndex != i) {  // if minIndex is not equal to i, swap the elements.
      let temp = array[i];
      array[i] = array[minIndex];
      array[minIndex] = temp;
    }
  }
  return array;  // returns the value of the sorted array.
}

console.log(selectionSort(count2));
